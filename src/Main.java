import ChessBoard.ChessBoard;

public class Main {
    public static void main(String[] args) {

        ChessBoard board =new ChessBoard();
        System.out.println(board);



    }
}

//    Создание класса ChessBoard:
//
//        Определить поля:
//      +  Двумерный массив (8x8) для представления клеток доски.

//        Определить конструктор:
//        Создание начальной расстановки фигур на доске.

//        Метод movePiece:
//        Перемещение фигуры с одной клетки на другую.

//        Проверка возможности хода.
//        Метод isMoveValid:
//        Проверка правильности хода с учетом правил каждой фигуры.

//        Методы для проверки игровой ситуации:
//        isCheck
//        isCheckmate
//        isStalemate
//        Метод displayBoard:

//        Отображение текущей позиции на доске в текстовом виде.

//        Дополнительные методы для других действий в игре:
//        Взятие фигуры
//        Превращение пешки
//        Рокировка

//        Создание классов фигур (Piece):
//
//        Создать общий абстрактный класс Piece, который будет являться
//        базовым для всех фигур.
//        Реализовать классы для каждой фигуры (Pawn, Rook, Knight,
//        Bishop, Queen, King).
//        Определить поля:
//        Тип фигуры
//        Цвет
//        Текущая позиция

//        Метод isValidMove для каждой фигуры:
//        Проверка корректности хода с учетом их правил.
//        Методы для определения возможных ходов:
//        getAvailableMoves
//        Методы для специфических действий:
//        isEnPassant
//        isCastling
//        isPromotion

//isEnPassant:
//
//        Определяет, произошло ли взятие на проходе. В шахматах, когда пешка
//        преодолевает две клетки из начальной позиции, оставляя соперника
//        возможность взять её, как если бы она остановилась на одной клетке,
//        путем взятия пешки на проходе.
//   isCastling:
//
//        Проверяет, произошло ли рокировка. Рокировка - это особый ход, при
//        котором король и одна из ладей двигаются в одном ходе. Рокировка может
//        быть короткой (с короткой ладьей) или длинной (с длинной ладьей).
//   isPromotion:
//
//        Определяет, произошло ли превращение пешки. Когда пешка достигает
//        противоположного конца доски, она может быть превращена в любую другую
//        фигуру (обычно в ферзя, ладью, слона или коня). Это называется превращением
//        или продвижением пешки.


//        Взаимодействие между классами:
//
//        Создание и управление объектами фигур на доске через класс ChessBoard.
//        Использование методов класса Piece для проверки корректности хода и
//        выполнения специфических действий.
//        Тестирование:
//
//        Создание тестовых сценариев для проверки работы методов и классов.
//        Убедиться, что все ходы фигур соответствуют правилам шахмат.
//        Каждый из этих шагов представляет собой отдельные задачи, которые
//        необходимо реализовать для создания функциональной шахматной доски в программе.